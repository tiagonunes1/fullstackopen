{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","services/login.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","importance","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","baseUrl","token","require","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","setToken","newToken","login","credentials","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","useEffect","noteService","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","addNote","event","preventDefault","noteObject","date","Date","toISOString","important","Math","random","returnedNote","concat","handleNoteChange","console","log","target","value","notesToShow","filter","handleLogin","loginService","setItem","stringify","setTimeout","onSubmit","type","name","onChange","map","find","n","changedNote","catch","error","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb323556.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({note,toggleImportance}) => {\n    const label = note.importance ? 'make not important' : 'make important'\nreturn (\n    <div>\n        <li className='note'>\n            {note.content} \n        <button onClick={toggleImportance}>{label}</button></li>\n    </div>\n    )\n}\n\n\nexport default Note","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null){\n        return null\n    }\n\n    return (\n        <div className='error'>\n            {message}\n         </div>\n    )\n}\nexport default Notification","import React from 'react'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Tiago Nunes 2021</em>\n    </div>\n  )\n}\n\nexport default Footer","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nlet token = null\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n}\n\nconst cors = require('cors')\n\nconst getAll = () =>{\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n    const config = {\n        headers: {Authorization: token},\n    }\n\n    const response = await axios.post(baseUrl, newObject, config)\n    return response.data\n    \n    // const request = axios.post(baseUrl,newObject)\n    // return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll,create,update,setToken }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\n\nexport default { login }","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport noteService from './services/notes'\nimport loginService from './services/login' \n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const [username, setUsername] = useState('mluukkai') \n  const [password, setPassword] = useState('mluukkai') \n\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n      setNotes(initialNotes)\n    })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      noteService.setToken(user.token)\n    }\n  }, [])  \n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n        .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n    .update(id, changedNote)\n      .then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      setErrorMessage(\n        `Note '${note.content}' was already removed from server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    })    \n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important)\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      noteService.setToken(user.token)\n      window.localStorage.setItem(\n        'loggedNoteappUser', JSON.stringify(user)\n      ) \n\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const loginForm = () => (\n    <form onSubmit={handleLogin}>\n      <div>\n        username\n          <input\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        password\n          <input\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button type=\"submit\">login</button>\n    </form>      \n  )\n\n  const noteForm = () => (\n    <form onSubmit={addNote}>\n      <input\n        value={newNote}\n        onChange={handleNoteChange}\n      />\n      <button type=\"submit\">save</button>\n    </form>  \n  )\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n\n      {user === null ?\n        loginForm() :\n        <div>\n          <p>{user.name} logged in</p>\n          {noteForm()}\n        </div>\n      }\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>   \n      <ul>\n        {notesToShow.map(note => \n            <Note\n              key={note.id}\n              note={note} \n              toggleImportance={() => toggleImportanceOf(note.id)}\n            />\n        )}\n      </ul>\n\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\n  ReactDOM.render(<App />,document.getElementById('root'))"],"sourceRoot":""}