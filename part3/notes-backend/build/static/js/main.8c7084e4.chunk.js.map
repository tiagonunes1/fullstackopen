{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","importance","className","content","onClick","baseUrl","require","axios","get","then","response","data","newObject","post","id","put","Notification","message","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","console","log","length","notesToShow","filter","important","Footer","style","color","fontStyle","fontSize","map","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"4KAceA,EAZF,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,KAAKC,EAAsB,EAAtBA,iBACVC,EAAQF,EAAKG,WAAa,qBAAuB,iBAC3D,OACI,8BACI,qBAAIC,UAAU,OAAd,UACKJ,EAAKK,QACV,wBAAQC,QAASL,EAAjB,SAAoCC,U,gBCPtCK,EAAU,aAkBD,GAjBFC,EAAQ,IAEN,WAEX,OADgBC,IAAMC,IAAIH,GACXI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAa9B,EAVA,SAAAC,GAEX,OADgBL,IAAMM,KAAKR,EAAQO,GACpBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,UAAaV,EAAb,YAAwBS,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCH9BK,EAXM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACO,KAIP,qBAAKf,UAAU,QAAf,SACKe,KCiGEC,EApGH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,0BAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACVC,IAECpB,MAAK,SAAAqB,GAAiBT,EAASS,QAC7B,IACHC,QAAQC,IAAI,SAAUZ,EAAMa,OAAQ,SAEpC,IA4CMC,EAAcV,EAClBJ,EACAA,EAAMe,QAAO,SAAArC,GAAI,OAAIA,EAAKsC,aAEtBC,EAAS,WAMb,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,4GAIN,OACE,gCACE,uCACA,cAAC,EAAD,CAAcxB,QAASS,IACvB,8BACE,yBAAQtB,QAAS,kBAAMqB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGU,EAAYQ,KAAI,SAAA5C,GAAI,OACjB,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,iBAAkB,kBAxDjC,SAAAe,GAChB,gCAA4BA,GAArC,IACMhB,EAAOsB,EAAMuB,MAAM,SAAAC,GAAC,OAAIA,EAAE9B,KAAOA,KACjC+B,EAAW,2BAAQ/C,GAAR,IAAcsC,WAAatC,EAAKsC,YAEjDP,EACQf,EAAI+B,GACXpC,MAAK,SAAAqC,GACJzB,EAASD,EAAMsB,KAAI,SAAA5C,GAAI,OAAIA,EAAKgB,KAAOA,EAAKhB,EAAOgD,SAEpDC,OAAM,SAACC,GAENrB,EAAgB,SAAD,OACJ7B,EAAKK,QADD,0CAGf8C,YAAW,WACTtB,EAAgB,QACf,KACHN,EAASD,EAAMe,QAAO,SAAAS,GAAC,OAAIA,EAAE9B,KAAOA,SAsC0BoC,CAAmBpD,EAAKgB,MAArEhB,EAAKgB,SAGtB,uBAAMqC,SA3EM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBnD,QAASmB,EACTiC,MAAM,IAAIC,MAAOC,cACjBrB,UAAWsB,KAAKC,SAAW,IAG7B9B,EACQyB,GACP7C,MAAK,SAAAqC,GACJzB,EAASD,EAAMwC,OAAOd,IACtBvB,EAAW,QA+DX,UACE,uBACEsC,MAAOvC,EACPwC,SAvCiB,SAACV,GACxBrB,QAAQC,IAAIoB,EAAMW,OAAOF,OACzBtC,EAAW6B,EAAMW,OAAOF,UAuCpB,wBAAQG,KAAK,SAAb,qBAEF,cAAC3B,EAAD,Q,MCjGJ4B,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.8c7084e4.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({note,toggleImportance}) => {\n    const label = note.importance ? 'make not important' : 'make important'\nreturn (\n    <div>\n        <li className='note'>\n            {note.content} \n        <button onClick={toggleImportance}>{label}</button></li>\n    </div>\n    )\n}\n\n\nexport default Note","import axios from 'axios'\nconst baseUrl = '/api/notes'\nconst cors = require('cors')\n\nconst getAll = () =>{\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl,newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default {getAll,create,update}","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null){\n        return null\n    }\n\n    return (\n        <div className='error'>\n            {message}\n         </div>\n    )\n}\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport axios from 'axios'\nimport noteService from './services/notes'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(false)\n  const [errorMessage, setErrorMessage] = useState('some error happened...')\n\n  useEffect(() => {\n  noteService\n  .getAll()\n  .then(initialNotes => {setNotes(initialNotes)})\n  }, [])\n  console.log('render', notes.length, 'notes')\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n\n    noteService\n    .create(noteObject)\n    .then(returnedNote => {\n      setNotes(notes.concat(returnedNote))\n      setNewNote('')\n    })\n  }\n\n  const toggleImportanceOf = id =>{\n    const url = `http://localhost:3002/${id}`\n    const note = notes.find( n => n.id === id )\n    const changedNote = {... note, important : !note.important}\n\n    noteService\n    .update(id, changedNote)\n    .then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote  ))\n    })\n    .catch((error) => {\n      // alert(`the note ${note.content} was already deleted from server`)\n      setErrorMessage(\n        `Note '${note.content}' was already removed from the server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000);\n      setNotes(notes.filter(n => n.id !== id))\n    })\n  }\n\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important)\n\n  const Footer = () => {\n    const footerStyle = {\n      color: 'green',\n      fontStyle: 'italic',\n      fontSize: 16\n    }\n    return(\n      <div style ={footerStyle}>\n        <br />\n        <em>Note app, Department of Computer Science, University of Helsinki 2021 </em> \n        </div>\n    )\n  }\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage}/>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>   \n      <ul>\n        {notesToShow.map(note => \n            <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)}/>\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>  \n      <Footer/>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\n  ReactDOM.render(<App />,document.getElementById('root'))"],"sourceRoot":""}