{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","value","onChange","PersonForm","text","Persons","person","onClick","name","number","baseUrl","newObject","axios","post","then","response","data","id","put","get","delete","Notification","message","type","className","App","useState","persons","setPersons","useEffect","personService","intialPersons","catch","error","console","log","showAll","setShowAll","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","newNotification","setNewNotification","contactsToShow","filter","toLowerCase","event","target","onSubmit","preventDefault","find","p1","p2","window","confirm","updatedPerson","returnedPerson","p","concat","setTimeout","contactObject","date","Date","toISOString","map","filteredP","handleDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a87a4f8d.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({value,onChange}) => {\n    return (\n        <div> filter shown with <input  value={value} onChange={onChange} />\n        </div>\n    )\n}\nexport default Filter","import React from 'react'\n\n\nconst PersonForm = ({ text,value,onChange }) =>{\n    return(\n        <div>\n     <div>{text}: <input value={value} onChange={onChange}/></div>\n     </div>\n    )\n}\nexport default PersonForm","import React from 'react'\n\n\nconst Persons = ({ person,onClick }) =>{\n    return(\n    <li>{person.name} - {person.number} <button onClick={onClick}>delete</button></li>\n    )\n}\nexport default Persons","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl,newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id,newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`,newObject)\n    return request.then(response => response.data)\n}\n\n\nconst xdelete = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default {create,update,getAll,xdelete}","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if ( message === null ){\n        return null\n    }\n\n     if ( message.type === null ){\n         return null\n     }\n\n     if (message.type === 'error'){\n         return(\n             <div className=\"error\">{message.text}</div>\n         )\n     }\n     if (message.type === 'success'){\n         return(<div className=\"success\">{message.text}</div>\n        )\n     }\n    //  return (\n    //      <div className='error'>{ message.text }</div>\n    //  )\n}\n\nexport default Notification","import React,{ userState, useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () =>{\n  const [ persons, setPersons] = useState([])\n\nconst hook = () => {\n  personService\n  .getAll()\n  .then( intialPersons => {setPersons(intialPersons)})\n  .catch((error) => console.log(error))\n}\n  \nuseEffect(hook,[])\n\n  const [showAll, setShowAll] = useState(true)\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [newNotification, setNewNotification] = useState(null)\n  \n  const addContact = (event) => {\n    event.preventDefault()\n\n\n    const equalName = (p1, p2) =>\n      p1.toLowerCase() === p2.toLowerCase();\n\n      const person = persons.find((person) =>\n      equalName(person.name, newName)\n    );\n\n    if (person){\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) { \n        const updatedPerson = {...person, number : newNumber,name : newName};\n        personService\n        .update(person.id,updatedPerson)\n        .then((returnedPerson)=>{\n          setPersons(persons\n          .filter((p) => p.name !== updatedPerson.name)\n          .concat(returnedPerson))\n          setNewNotification({\n           text: `${updatedPerson.name} number was updated to ${updatedPerson.number}!`,\n           type: \"success\"\n          }\n          )\n          setTimeout(() => setNewNotification(null),5000)\n        })\n        .catch((error) =>{\n          setPersons(persons.filter((p) => p.name !== person.name));\n          setNewNotification({\n            text: `${person.name} has already been removed from the server!`,\n            type: \"error\"  \n          })\n          setTimeout(() => {\n            setNewNotification(null)\n          }, 5000);\n        })\n      }\n      return\n    } \n\n    const contactObject = {\n      name: newName,\n      number: newNumber,\n      date: new Date().toISOString(),      \n    }\n\n    personService\n    .create(contactObject)\n    .then(returnedPerson => {\n      setPersons(persons.concat(returnedPerson))\n      setNewName('')\n      setNewNumber('')\n       //setNewNotification(`Added ${contactObject.name}`)\n       setNewNotification(\n          {\n          text: `Added ${contactObject.name}`,\n          type: \"success\"  \n        })\n\n      setTimeout(() => {\n        setNewNotification(null)\n      }, 5000);\n    })\n     .catch((error) => {\n      setNewNotification({\n        text: error.response.data.error,\n        type: \"error\",\n      });\n    })\n  }\n\n  const handleNewContact = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleNewFilter = (event) => {\n     setShowAll(!showAll)\n     setNewFilter(event.target.value)\n  }\n\n   const contactsToShow = showAll ? persons : persons.filter(person => person.name.toLowerCase() === newFilter.toLowerCase())\n   \n   const handleDelete = (id) => {\n    const person = persons.find((p) => p.id === id);\n    const confirmDelete = window.confirm(`Delete ${person.name}?`);\n    if (confirmDelete) {\n      personService.xdelete(id).then(() => {\n        //Update state --> filter out deleted person\n        const filteredP = persons.filter((person) => person.id !== id);\n        setPersons(filteredP);\n\n\n        setNewNotification({\n          text: `${person.name} has been removed from the server!`,\n          type: \"success\"  \n        })\n\n\n        // reset filter\n        setNewFilter(\"\");\n      });\n    }\n  };\n  return(\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={newNotification} />\n      <Filter value={newFilter} onChange={handleNewFilter} />\n      <h2>add new</h2>\n      <form onSubmit={ addContact }>\n        <PersonForm text=\"Name\" value ={newName} onChange={handleNewContact} />\n        <PersonForm text=\"Number\" value ={newNumber} onChange={handleNewNumber}/>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      <div>\n        <ul>\n          {contactsToShow.map( person => \n             <Persons key={person.id} person={person} onClick={()=> handleDelete(person.id)}/>\n            )}\n        </ul>\n      </div>\n    </div>\n  )\n}\nexport default App\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nimport personService from './services/persons'\nimport { allowedNodeEnvironmentFlags } from 'process';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}